#!/bin/bash
#
# This script will remove directory associations for all GroupWise users for the Directory ID given.
# You will need to know the IP Address or Hostname of a GroupWise Admin Service, preferably of the
# Primary GroupWise domain.  To determine if you need the IP address or hostname,  from a terminal 
# window on the GW Admin server, run one of the following commands:
#
# Linux -  /opt/novell/groupwise/admin/gwadmin-ipc query
# Windows - C:\Program Files\Novell\GroupWise Server\admin\gwadmin-ipc.exe query | more
#
# The output should read something like:
#    192.168.10.10:9710=>MyDomain(/mail/mydomain)
# or
#    0.0.0.0:9710=>MyDomain(/mail/mydomain)
#
# If it reads as the second example,  the admin service is listening on all interfaces,
# so you can use either the IP address or DNS Hostname for this script.
# If an IP address or DNS Hostname is listed,  you must use that for this script as the 
# admin service is bound exclusively to it.
#
# You will also need to enter the admin service port, and valid GroupWise adminstrator
# credentials to login to the Admin service.  You will then need to provide the directory ID for the
# directory object that you wish to disociate users from.

function askYesOrNo {
	# If $2 = "skip" Will default return 0;
	if [ "$2" = "skip" ];then return 0; fi

		REPLY=""
		while [ -z "$REPLY" ] ; do
			read -ep "$1 $YES_NO_PROMPT" -n1 REPLY
			REPLY=$(echo ${REPLY}|tr [:lower:] [:upper:])
			case $REPLY in
				$YES_CAPS ) return 0 ;;
				$NO_CAPS ) return 1 ;;
				* ) REPLY=""
			esac
		done
	}

# Initialize the yes/no prompt
YES_STRING=$"y"
NO_STRING=$"n"
YES_NO_PROMPT=$"[y/n]: "
YES_CAPS=$(echo ${YES_STRING}|tr [:lower:] [:upper:])
NO_CAPS=$(echo ${NO_STRING}|tr [:lower:] [:upper:])

function eContinue {
	local reply="."
	echo -n "Press [Enter] to continue"
	while [ -n "$reply" ];do
		read -n1 -s reply;
	done
	clear;
	}

function getURL {
	URLS=`curl -s -k --user $GWADMIN:$PWD $LISTURL | sed 's/\s*$//' | sed 's/ /%20/g' |gawk --field-separator=, 'NR!=1 {print "'$BASEURL'/domains/"$1"/postoffices/"$2"/users/"$3"/directorylink"}'` 
}

function getURLAppend {
	local tempURLS="$URLS";
	URLS=`curl -s -k --user $GWADMIN:$PWD $LISTURL | sed 's/\s*$//' | sed 's/ /%20/g' |gawk --field-separator=, 'NR!=1 {print "'$BASEURL'/domains/"$1"/postoffices/"$2"/users/"$3"/directorylink"}'`
	URLS=`echo -e "$URLS\n$tempURLS"`
}

function disassociateURL {
	# Pass in list of URLs to be disassociated
	local disassociatedObject=false
	echo;
	for URL in $1
	do 
		if (`echo "$URL" | grep -q "$BASEURL/domains/.*./postoffices/.*./users/.*./directorylink";`); then
			echo $URL
			curl -k --user $GWADMIN:$PWD -X DELETE $URL
			disassociatedObject=true
		fi
	done
	if ($disassociatedObject);then
		echo -e "\nDisassociate complete"
	else
		echo -e "\nNo valid URLs found"
	fi
}

# Get user prompts
echo "Enter GroupWise Admin Service IP/Hostname: "
read IP
echo "Enter Groupwise Admin Service Port: "
read PORT	
echo "Enter GroupWise System Administrator: "
read GWADMIN
echo "Enter GroupWise Administrator Password: "
read -s PWD
echo "Re-Enter GroupWise Administrator Password: "
read -s PWD2

# Verify Passwords match
if [ "$PWD" != "$PWD2" ];then
	echo "Passwords do not match"
	eContinue;
	exit 1;
fi

# Assign baseurl varialbe
BASEURL="https://$IP:$PORT/gwadmin-service"

# Verify connection is valid | http status 200 OK valid
validURL=`curl -s -I -k --user $GWADMIN:$PWD $BASEURL/list/user | grep HTTP/1.1 | awk {'print $2'}`

# Main Menu (IF validURL = 200)
if [ "$validURL" = "200" ];then
	while :
	do
		clear;
		echo -e "Remove the directory associated links.\n"
		echo -e "1. Disassociate GroupWise Menu"
		echo -e "2. Disassociate Users Menu"
		echo -e "3. Disassociate Groups Menu"
		echo -e "4. Disassociate Resources Menu"

 		echo -e "\n0. Exit"
	 	echo -n -e "\nSelection: "
	 	read -n1 opt;
		case $opt in

			1) # Disassociate GroupWise Menu
				while :
				do
					clear;
					echo -e "Remove the directory link from GroupWise users, groups, and resources.\n"
					echo -e "1. Disassociate the GroupWise System"
			 		echo -e "2. Disassociate by Directory ID"
					echo -e "3. Disassociate by Domain"
			 		echo -e "4. Disassociate by Post Office"
			 		echo -e "5. Disassociate by Object Name"

			 		echo -e "\n0. Back"
				 	echo -n -e "\nSelection: "
				 	read -n1 opt;
					case $opt in

						1) #
							clear;
							echo -e "This will remove the users directorylink association on the GroupWise system"
							if askYesOrNo "Do you want to continue?";then

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?attrs=domain,postoffice,name"
								getURL;

								LISTURL="$BASEURL/list/group.csv?attrs=domain,postoffice,name"
								getURLAppend;

								LISTURL="$BASEURL/list/resource.csv?attrs=domain,postoffice,name"
								getURLAppend;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
							;;

						2) #
							clear;
							echo -e "This will remove the users directorylink association for a directoryID"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter LDAP Directory ID: "
								read DIRECTORY

								# Replace spaces with %20 in DIRECTORY
								DIRECTORY=${DIRECTORY// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURL;

								LISTURL="$BASEURL/list/group.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURLAppend;

								LISTURL="$BASEURL/list/resource.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURLAppend;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						3) #
							clear;
							echo -e "This will remove the users directorylink association in a domain"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Domain Name: "
								read DOMAIN

								# Replace spaces with %20 in DOMAIN
								DOMAIN=${DOMAIN// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURL;

								LISTURL="$BASEURL/list/group.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURLAppend;

								LISTURL="$BASEURL/list/resource.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURLAppend;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						4) #
							clear;
							echo -e "This will remove the users directorylink association in a post office"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter Post Office Name: "
								read PO

								# Replace spaces with %20 in PO
								PO=${PO// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURL;

								LISTURL="$BASEURL/list/group.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURLAppend;

								LISTURL="$BASEURL/list/resource.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURLAppend;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						5) #
							clear;
							echo -e "This will remove a user directorylink association"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Object Name: "
								read OBJECT

								# Replace spaces with %20 in PO
								OBJECT=${OBJECT// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURL;

								LISTURL="$BASEURL/list/group.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURLAppend;

								LISTURL="$BASEURL/list/resource.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURLAppend;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

				/q | q | 0)break;;
				  *) ;;
				esac
				done
				
			;;

			2) # Disassociate Users Menu
				while :
				do
					clear;
					echo -e "Remove the directory link from users.\n"
					echo -e "1. Disassociate All Users"
	 				echo -e "2. Disassociate Users by Direcory ID"
					echo -e "3. Disassociate Users by Domain"
			 		echo -e "4. Disassociate Users by Post Office"
			 		echo -e "5. Disassociate User by Name"

			 		echo -e "\n0. Back"
				 	echo -n -e "\nSelection: "
				 	read -n1 opt;
					case $opt in

						1) #
							clear;
							echo -e "This will remove the users directorylink association on the GroupWise system"
							if askYesOrNo "Do you want to continue?";then

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
							;;

						2) #
							clear;
							echo -e "This will remove the users directorylink association for a directoryID"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter LDAP Directory ID: "
								read DIRECTORY

								# Replace spaces with %20 in DIRECTORY
								DIRECTORY=${DIRECTORY// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						3) #
							clear;
							echo -e "This will remove the users directorylink association in a domain"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Domain Name: "
								read DOMAIN

								# Replace spaces with %20 in DOMAIN
								DOMAIN=${DOMAIN// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						4) #
							clear;
							echo -e "This will remove the users directorylink association in a post office"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter Post Office Name: "
								read PO

								# Replace spaces with %20 in PO
								PO=${PO// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						5) #
							clear;
							echo -e "This will remove a user directorylink association"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Object Name: "
								read OBJECT

								# Replace spaces with %20 in PO
								OBJECT=${OBJECT// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/user.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

				/q | q | 0)break;;
				  *) ;;
				esac
				done
				
			;;

			3) # Disassociate Groups Menu
				while :
				do
					clear;
					echo -e "Remove the directory link from groups.\n"
					echo -e "1. Disassociate All Groups"
	 				echo -e "2. Disassociate Groups by Direcory ID"
					echo -e "3. Disassociate Groups by Domain"
			 		echo -e "4. Disassociate Groups by Post Office"
			 		echo -e "5. Disassociate Group by Name"

			 		echo -e "\n0. Back"
				 	echo -n -e "\nSelection: "
				 	read -n1 opt;
					case $opt in

						1) #
							clear;
							echo -e "This will remove the groups directorylink association on the GroupWise system"
							if askYesOrNo "Do you want to continue?";then

								# Create disassociate URL
								LISTURL="$BASEURL/list/group.csv?attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
							;;

						2) #
							clear;
							echo -e "This will remove the groups directorylink association for a directoryID"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter LDAP Directory ID: "
								read DIRECTORY

								# Replace spaces with %20 in DIRECTORY
								DIRECTORY=${DIRECTORY// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/group.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						3) #
							clear;
							echo -e "This will remove the groups directorylink association in a domain"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Domain Name: "
								read DOMAIN

								# Replace spaces with %20 in DOMAIN
								DOMAIN=${DOMAIN// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/group.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						4) #
							clear;
							echo -e "This will remove the groups directorylink association in a post office"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter Post Office Name: "
								read PO

								# Replace spaces with %20 in PO
								PO=${PO// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/group.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						5) #
							clear;
							echo -e "This will remove a group directorylink association"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter group Name: "
								read OBJECT

								# Replace spaces with %20 in PO
								OBJECT=${OBJECT// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/group.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

				/q | q | 0)break;;
				  *) ;;
				esac
				done
				
			;;

			4) # Disassociate Resources Menu
				while :
				do
					clear;
					echo -e "Remove the directory link from resources.\n"
					echo -e "1. Disassociate All Resources"
	 				echo -e "2. Disassociate Resources by Direcory ID"
					echo -e "3. Disassociate Resources by Domain"
			 		echo -e "4. Disassociate Resources by Post Office"
			 		echo -e "5. Disassociate Resource by Name"

			 		echo -e "\n0. Back"
				 	echo -n -e "\nSelection: "
				 	read -n1 opt;
					case $opt in

						1) #
							clear;
							echo -e "This will remove the resources directorylink association on the GroupWise system"
							if askYesOrNo "Do you want to continue?";then

								# Create disassociate URL
								LISTURL="$BASEURL/list/resource.csv?attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
							;;

						2) #
							clear;
							echo -e "This will remove the resources directorylink association for a directoryID"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter LDAP Directory ID: "
								read DIRECTORY

								# Replace spaces with %20 in DIRECTORY
								DIRECTORY=${DIRECTORY// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/resource.csv?directoryID=$DIRECTORY&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						3) #
							clear;
							echo -e "This will remove the resources directorylink association in a domain"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter Domain Name: "
								read DOMAIN

								# Replace spaces with %20 in DOMAIN
								DOMAIN=${DOMAIN// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/resource.csv?domainName=$DOMAIN&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						4) #
							clear;
							echo -e "This will remove the resources directorylink association in a post office"
							if askYesOrNo "Do you want to continue?";then
								
								echo "Enter Post Office Name: "
								read PO

								# Replace spaces with %20 in PO
								PO=${PO// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/resource.csv?postOfficeName=$PO&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

						5) #
							clear;
							echo -e "This will remove a resource directorylink association"
							if askYesOrNo "Do you want to continue?";then

								echo "Enter resource Name: "
								read OBJECT

								# Replace spaces with %20 in PO
								OBJECT=${OBJECT// /%20}

								# Create disassociate URL
								LISTURL="$BASEURL/list/resource.csv?name=$OBJECT&attrs=domain,postoffice,name"
								getURL;

								# Disassociate list of URLS
								disassociateURL "$URLS";
								eContinue;
							fi
						;;

				/q | q | 0)break;;
				  *) ;;
				esac
				done				
			;;

	/q | q | 0)break;;
	  *) ;;
	esac
	done
else
	echo -e "\nUnable to find Admin Service: $IP:$PORT"
	eContinue;
fi
clear;exit 0;
